package com.example.assertmanangement;

import android.content.Intent;
import android.graphics.Bitmap;
import android.os.AsyncTask;
import android.os.Bundle;
import android.os.Handler;
import android.provider.MediaStore;
import android.view.View;
import android.widget.Button;
import android.widget.EditText;
import android.widget.Toast;

import androidx.appcompat.app.AppCompatActivity;

import org.json.JSONObject;

import java.io.File;
import java.io.FileOutputStream;
import java.io.OutputStream;
import java.net.HttpURLConnection;
import java.net.URL;
import java.text.SimpleDateFormat;
import java.util.Date;
import java.util.Locale;

public class AddAssetActivity extends AppCompatActivity {

    private EditText assetTagEditText, assetNameEditText, roomEditText,
            conditionEditText, locationEditText, notesEditText, submittedByEditText;
    private Button submitButton, captureImageButton;

    private static final String POST_ASSET_URL = "https://oracleapex.com/ords/holdingtechsa/admin/Assert/allassert";
    private static final int CAMERA_REQUEST = 1001;

    @Override
    protected void onCreate(Bundle savedInstanceState) {
        super.onCreate(savedInstanceState);
        setContentView(R.layout.activity_add_asset);
        setTitle("Add Asset");

        // Initialize UI components
        assetTagEditText = findViewById(R.id.assetTagEditText);
        assetNameEditText = findViewById(R.id.assetNameEditText);
        roomEditText = findViewById(R.id.roomEditText);
        conditionEditText = findViewById(R.id.conditionEditText);
        locationEditText = findViewById(R.id.locationEditText);
        notesEditText = findViewById(R.id.notesEditText);
        submittedByEditText = findViewById(R.id.submittedByEditText);
        submitButton = findViewById(R.id.submitButton);
        captureImageButton = findViewById(R.id.captureImageButton);

        // Capture image
        captureImageButton.setOnClickListener(v -> {
            Intent cameraIntent = new Intent(MediaStore.ACTION_IMAGE_CAPTURE);
            if (cameraIntent.resolveActivity(getPackageManager()) != null) {
                startActivityForResult(cameraIntent, CAMERA_REQUEST);
            }
        });

        // Handle submit button click
        submitButton.setOnClickListener(v -> {
            String assetTag = assetTagEditText.getText().toString().trim();
            String assetName = assetNameEditText.getText().toString().trim();
            String room = roomEditText.getText().toString().trim();
            String condition = conditionEditText.getText().toString().trim();
            String location = locationEditText.getText().toString().trim();
            String notes = notesEditText.getText().toString().trim();

            if (assetTag.isEmpty() || assetName.isEmpty() || room.isEmpty()
                    || condition.isEmpty() || location.isEmpty()) {
                Toast.makeText(AddAssetActivity.this, "Please fill all fields", Toast.LENGTH_SHORT).show();
                return;
            }

            // submitted_by is always 1 (hardcoded)
            new PostAssetTask().execute(assetTag, assetName, room, condition, location, notes, "N");
        });
    }

    // Handle camera result
    @Override
    protected void onActivityResult(int requestCode, int resultCode, Intent data) {
        super.onActivityResult(requestCode, resultCode, data);

        if (requestCode == CAMERA_REQUEST && resultCode == RESULT_OK && data != null) {
            Bundle extras = data.getExtras();
            Bitmap bitmap = (Bitmap) extras.get("data");

            if (bitmap != null) {
                String assetName = assetNameEditText.getText().toString().trim();
                if (assetName.isEmpty()) {
                    assetName = "asset"; // fallback if user didn't type name
                }
                saveImage(bitmap, assetName);
            }
        }
    }

    // Save image to internal storage with assetName + timestamp
    private void saveImage(Bitmap bitmap, String assetName) {
        try {
            String timeStamp = new SimpleDateFormat("yyyyMMdd_HHmmss", Locale.getDefault()).format(new Date());
            String fileName = assetName + "_" + timeStamp + ".jpg";

            // internal storage folder: /data/data/<package>/files/assets
            File dir = new File(getFilesDir(), "assets");
            if (!dir.exists()) dir.mkdirs();

            File file = new File(dir, fileName);
            FileOutputStream fos = new FileOutputStream(file);
            bitmap.compress(Bitmap.CompressFormat.JPEG, 100, fos);
            fos.flush();
            fos.close();

            Toast.makeText(this, "Image saved: " + file.getAbsolutePath(), Toast.LENGTH_LONG).show();
        } catch (Exception e) {
            e.printStackTrace();
            Toast.makeText(this, "Failed to save image", Toast.LENGTH_SHORT).show();
        }
    }

    // AsyncTask for posting asset
    private class PostAssetTask extends AsyncTask<Object, Void, Boolean> {

        @Override
        protected Boolean doInBackground(Object... params) {
            String assetTag = (String) params[0];
            String assetName = (String) params[1];
            String room = (String) params[2];
            String condition = (String) params[3];
            String location = (String) params[4];
            String notes = (String) params[5];
            String verified = (String) params[6];

            try {
                URL url = new URL(POST_ASSET_URL);
                HttpURLConnection conn = (HttpURLConnection) url.openConnection();
                conn.setRequestMethod("POST");
                conn.setRequestProperty("Content-Type", "application/json");
                conn.setDoOutput(true);

                // Create JSON object with asset data
                JSONObject jsonObject = new JSONObject();
                jsonObject.put("asset_tag", assetTag);
                jsonObject.put("asset_name", assetName);
                jsonObject.put("room", room);
                jsonObject.put("condition", condition);
                jsonObject.put("location", location);
                jsonObject.put("notes", notes);
                jsonObject.put("verified", verified);

                // Always hardcoded to 1
                jsonObject.put("submitted_by", 1);

                // Write JSON to request body
                OutputStream os = conn.getOutputStream();
                os.write(jsonObject.toString().getBytes("UTF-8"));
                os.flush();
                os.close();

                int responseCode = conn.getResponseCode();
                return responseCode == HttpURLConnection.HTTP_OK || responseCode == HttpURLConnection.HTTP_CREATED;

            } catch (Exception e) {
                e.printStackTrace();
                return false;
            }
        }

        @Override
        protected void onPostExecute(Boolean success) {
            if (success) {
                // Show toast immediately
                Toast.makeText(AddAssetActivity.this, "Asset posted successfully!", Toast.LENGTH_SHORT).show();

                // Delay for 10 seconds then go to MainActivity and show toast
                new Handler().postDelayed(() -> {
                    Intent intent = new Intent(AddAssetActivity.this, MainActivity.class);
                    intent.addFlags(Intent.FLAG_ACTIVITY_CLEAR_TOP | Intent.FLAG_ACTIVITY_NEW_TASK);
                    startActivity(intent);
                    Toast.makeText(AddAssetActivity.this, "Successfully added", Toast.LENGTH_LONG).show();
                    finish();
                }, 10000);

            } else {
                Toast.makeText(AddAssetActivity.this, "Failed to post asset.", Toast.LENGTH_SHORT).show();
            }
        }
    }
}
